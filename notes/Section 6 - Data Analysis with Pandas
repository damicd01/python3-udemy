Section 6 - Data Analysis with Pandas



What is Pandas

Pandas is a library in Python which is used for data structures and data analysis.  It is a means to load data into Python and then
use code to analyze it and manipulate it via tables, text and visual graphs.

To install the library you can do so via pip:

pip install pandas

Once installed you can import it and use it:

Python 3.6.3 (v3.6.3:2c5fed86e0, Oct  3 2017, 00:32:08)
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas



IPython

It is an enhanced Python interactive shell - it drives the same as the Python shell however it provides better printing of large
output - this makes it suitable for data analysis.

To use ipython you fire it up like you would normally start a python shell:

ddamico@Danieles-MBP:~/Udemy/Python/python3-udemy$ ipython
Python 3.6.3 (v3.6.3:2c5fed86e0, Oct  3 2017, 00:32:08)
Type 'copyright', 'credits' or 'license' for more information
IPython 6.5.0 -- An enhanced Interactive Python. Type '?' for help.


In [1]:

Once you have the shell open you will need to import pandas module:

In [1]: import pandas

Then you can start to import data in order to manipulate it.  The right terminology for data imported is "Data Frames"

Below you can see an example of manually creating a data frame by inputting 2 lists which contain lists:

In [4]: df1=pandas.DataFrame([[1,2,3],[10,20,30]])

In [5]: df1
Out[5]:
    0   1   2
0   1   2   3
1  10  20  30

The 0,1,2 at the top are the number of the columns and the 0,1 on the left hand side are the indexes to the rows.

You can name the columns for ease of reading as per the following example:

In [6]: df2=pandas.DataFrame([["Bart","Simpson",12],["Lisa","Simpson",14]],columns=["Name","Surname","Age"])

In [7]: df2
Out[7]:
   Name  Surname  Age
0  Bart  Simpson   12
1  Lisa  Simpson   14

You can also choose to name the indexes - however it is normally not feasible as a data frame will have a finite number of columns
however the number of rows could grow and shrink, the following example shows how it can be done:

In [10]: df3=pandas.DataFrame([["Bart","Simpson",12],["Lisa","Simpson",14]],columns=["Name","Surname","Age"],index=["Customer1","Customer2"])

In [11]: df3
Out[11]:
           Name  Surname  Age
Customer1  Bart  Simpson   12
Customer2  Lisa  Simpson   14

The examples above show how you can create a data frame on the fly using lists, however you can also use dictionaries to do so:

In [26]: df5=pandas.DataFrame([{"Name":"Lisa","Surname":"Simpson","Age":14}])

In [27]: df5
Out[27]:
   Age  Name  Surname
0   14  Lisa  Simpson

Again this is just showing you what can be done as pandas will mostly be used with data imported from json, csv, xml, xlsx etc.

You can check the type of object this is in Python:

In [28]: type(df1)
Out[28]: pandas.core.frame.DataFrame

and you can check what methods you can use on the data frames by running:

dir(df1)

Once you know methods you can use you can start to manipulate the data within the data frames.



Getting started with Jupyter notebooks
